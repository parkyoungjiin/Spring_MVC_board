<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.mvc_board.mapper.BoardMapper">
	
	<!--
	 selectKey 태그를 사용하여 SELECT 구문 사용 후, 조회된 결과 값을 INSERT 구문에 반영 가능
	<insert id ="xxx">
		<selectKey keyProperty="값을 저장할 변수명" resultType="조회결과타입" order="실행 " >
			실행할 구문
			
		</selectKey>
	</insert>
	
	=> keyProperty : 조회할 데이터를 저장할 VO 객체의 실제 변수명 (나중에 #{}으로 사용 가능)
	
	=> resultType 속성 : SELECT 구문 실행 시 기대되는 조회 결과(리턴값)의 타입
	
	=> order 속성 : SELECT 구문을 실행할 시점
		1) BEFORE : SELECT -> INSERT
		2) AFTER : INSERT -> SELECT 
	
	
	
	
	 -->
	 <!-- 1. 게시글 등록 -->
	<insert id="insertBoard">
		<selectKey keyProperty="board_num" resultType="integer" order="BEFORE">
			SELECT MAX(board_num) FROM board
		</selectKey>
		
		<!-- select 구문에서 실행된 조회 결과(가장 큰 글번호)가 board_num 변수에 저장 -->
		INSERT
			INTO board
			VALUES (
				#{board_num} + 1
				,#{board_name}
				,#{board_pass}
				,#{board_subject}
				,#{board_content}
				,#{board_file}
				,#{board_real_file}
				,#{board_num} + 1
				,0
				,0
				,0
				,now()			
			)
	</insert>
	
	<!-- 2. 게시글 목록 조회 -->
	<select id="getBoardList" resultType="com.itwillbs.mvc_board.vo.BoardVO">
		SELECT *
			FROM board
		<!-- 
		조건에 따라 sql 구문 실행을 하기 위해서 choose, when, otherwise 사용
		 -->
		<if test="!keyword.equals('')">
			WHERE
			<!-- 2. 검색타입(searchType) 에 따른 WHERE 대상 변경 -->
			<!-- => 조건이 복수개이므로 choose 태그 사용 -->
			<choose>
				<when test="searchType.equals('subject')">
					board_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('content')">
					board_content LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('subject_content')">
					board_subject LIKE '%${keyword}%' 
					OR board_content LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('name')">
					board_name LIKE '%${keyword}%'
				</when>
			</choose>		
		</if>
		ORDER BY
			board_re_ref DESC
			, board_re_seq ASC
		LIMIT 
			#{startRow}
			, #{listLimit}
	</select>
	<!-- 3. 전체 게시물 수 조회 resultType에서 int, integer 같음. -->
	<select id="getBoardListCount" resultType="int">
		SELECT COUNT(*)
			FROM board
		<!-- 
		조건에 따라 sql 구문 실행을 하기 위해서 choose, when, otherwise 사용
		 -->
			<if test="!keyword.equals('')">
				WHERE
				<!-- 2. 검색타입(searchType) 에 따른 WHERE 대상 변경 -->
				<!-- => 조건이 복수개이므로 choose 태그 사용 -->
				<choose>
					<when test="searchType.equals('subject')">
						board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						board_content LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('subject_content')">
						board_subject LIKE '%${keyword}%' 
						OR board_content LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('name')">
						board_name LIKE '%${keyword}%'
					</when>
				</choose>		
			</if>

	</select>
	
	
	<!-- 상세정보 -->
	<select id="getBoard" resultType="com.itwillbs.mvc_board.vo.BoardVO">
		SELECT *
			FROM board
				WHERE board_num = #{board_num}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="increaseReadcount">
		UPDATE board 
			SET board_readcount = board_readcount + 1 
				WHERE board_num = #{board_num}
	
	</update>
	
</mapper>
